WHAT IS AUTOBOXING IN JAVA?

Autoboxing is the automatic conversion that the Java compiler makes between the primitive types and their corresponding object wrapper classes. For example, converting an int to an Integer, a double to a Double, and so on. If the conversion goes the other way, this is called unboxing.

Usage of Autoboxing

Autoboxing simplifies coding by allowing the mixing of primitives and objects in Java, enabling automatic conversions. 

For example, the following code: 

Usage in Java Collections Framework

Autoboxing is also used in the Java Collections Framework. For example, the add() method of the ArrayList class adds objects to the list, not primitives. If you add a primitive to an ArrayList, the compiler boxes the primitive in its wrapper class. Similarly, if you retrieve an object from the list, the compiler unboxes it from its wrapper class.

List<Integer> intList = new ArrayList<>();
intList.add(10); // Autoboxing: int to Integer
int sum = intList.get(0) + 20; // Unboxing: Integer to int